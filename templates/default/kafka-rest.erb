#!/bin/sh
<%# coding: UTF-8%>
# Auto-generated by Chef, do not edit!
### BEGIN INIT INFO
# Provides: kafka-rest
# Short-Description: Kafka Rest server
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
### END INIT INFO

USER=<%= node["confluent"]["user"] %>
SLEEP_TIME=5
CURRENT_WAIT=0
TIMEOUT=60
BIN_DIR=<%= node["confluent"]["install_dir"] %>/confluent-<%= node["confluent"]["version"] %>/bin

# We have to pipe STDOUT here otherwise it will print logs when running script
START_SERVER_CMD="nohup $BIN_DIR/kafka-rest-start /etc/kafka-rest/kafka-rest.properties &"

# We have to pipe STDOUT here otherwise it will print logs when running script
STOP_SERVER_CMD="$BIN_DIR/kafka-rest-stop >> /dev/null"

start() {
  findPid
  
  if [ "" = "$FOUND_PID" ]; then
    su -l $USER -c "$START_SERVER_CMD"
      
    if [ $? -ne 0 ]; then
      echo "Error starting Kafka Rest"
      exit 1
    fi
      
    echo "Kafka Rest successfully started"
      
  else
    echo "Kafka Rest is already running"
  fi
}

stop() {
  su -l $USER -c "$STOP_SERVER_CMD"
}

status() {
  findPid
  if [ -z "$FOUND_PID" ]; then
    echo "Kafka Rest is not running" ; exit 1
  else
    echo "Kafka Rest is running : $FOUND_PID" 
  fi
}

findPid() {
  FOUND_PID=`pgrep -u $USER -f kafkarest.Main`
}

case "$1" in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart)
    stop
    start
  ;;
  status)
    status
  ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
esac

exit 0